resource "azurerm_resource_group" "main" {
  name     = "d-managed-prometheus"
  location = "westeurope"
}

resource "random_string" "main" {
  length  = 12
  lower   = true
  upper   = false
  numeric = false
  special = false
}

// Azure Monitor Workspace (with managed Prometheus)
resource "azapi_resource" "az_monitor_workspace" {
  type                      = "microsoft.monitor/accounts@2021-06-03-preview"
  name                      = random_string.main.result
  parent_id                 = azurerm_resource_group.main.id
  location                  = azurerm_resource_group.main.location
  schema_validation_enabled = false

  body = jsonencode({})

  response_export_values = ["*"]
}

// Managed Grafana
resource "azapi_resource" "grafana" {
  type                      = "Microsoft.Dashboard/grafana@2022-08-01"
  name                      = random_string.main.result
  parent_id                 = azurerm_resource_group.main.id
  location                  = azurerm_resource_group.main.location
  schema_validation_enabled = true

  identity {
    type         = "SystemAssigned"
    identity_ids = []
  }

  body = jsonencode({
    properties = {
      autoGeneratedDomainNameLabelScope = "TenantReuse"
      zoneRedundancy                    = "Enabled"
      grafanaIntegrations = {
        azureMonitorWorkspaceIntegrations = [
          {
            azureMonitorWorkspaceResourceId = azapi_resource.az_monitor_workspace.id
          }
        ]
      }
    }
    sku = {
      name = "Standard"
    }
  })
}

// Assign current user access to Grafana
data "azurerm_client_config" "current" {}

resource "azurerm_role_assignment" "grafana" {
  scope                = azapi_resource.grafana.id
  role_definition_name = "Grafana Admin"
  principal_id         = data.azurerm_client_config.current.object_id
}

// Assign Monitoring Data Reader role to Grafana
data "azurerm_subscription" "current" {}

resource "azurerm_role_assignment" "grafana_monitoring_reader" {
  scope = azapi_resource.az_monitor_workspace.id
  # scope                = "/subscriptions/${data.azurerm_subscription.current.subscription_id}"
  role_definition_name = "Monitoring Data Reader"
  principal_id         = azapi_resource.grafana.identity[0].principal_id
}

output "endpointid" {
  value = jsondecode(azapi_resource.az_monitor_workspace.output).properties.defaultIngestionSettings.dataCollectionEndpointResourceId
}
  

// Rule collection
# resource "azapi_resource" "rule_collection_endpoint" {
#   schema_validation_enabled = false
#   type                      = "Microsoft.Insights/dataCollectionEndpoints@2021-09-01-preview"
#   name                      = "d-managed-prometheus"
#   location                  = azurerm_resource_group.main.location
#   parent_id                 = azurerm_resource_group.main.id
#   body = jsonencode({
#     kind = "Linux"
#   })
# }

resource "azapi_resource" "rule_collection" {
  schema_validation_enabled = false
  type                      = "Microsoft.Insights/dataCollectionRules@2021-09-01-preview"
  name                      = "d-managed-prometheus"
  location                  = azurerm_resource_group.main.location
  parent_id                 = azurerm_resource_group.main.id
  body = jsonencode({
    properties = {
      dataCollectionEndpointId = jsondecode(azapi_resource.az_monitor_workspace.output).properties.defaultIngestionSettings.dataCollectionEndpointResourceId
      dataFlows = [
        {
          destinations = [
            "MonitoringAccount1"
          ]
          streams = [
            "Microsoft-PrometheusMetrics"
          ]
        }
      ]
      dataSources = {
        prometheusForwarder = [
          {
            name               = "PrometheusDataSource"
            labelIncludeFilter = {}
            streams = [
              "Microsoft-PrometheusMetrics"
            ]
          }
        ]
      }
      description = "DCR for Azure Monitor Metrics Profile (Managed Prometheus)"
      destinations = {
        monitoringAccounts = [
          {
            accountResourceId = "${azapi_resource.az_monitor_workspace.id}"
            name              = "MonitoringAccount1"
          }
        ]
      }
    }
    kind = "Linux"
  })
}

resource "azapi_resource" "rule_collection_association" {
  schema_validation_enabled = false
  type                      = "Microsoft.Insights/dataCollectionRuleAssociations@2021-09-01-preview"
  name                      = "aks"
  parent_id                 = azapi_resource.aks.id
  body = jsonencode({
    properties = {
      dataCollectionRuleId     = jsondecode(azapi_resource.az_monitor_workspace.output).properties.defaultIngestionSettings.dataCollectionRuleResourceId
    }
  })
}
