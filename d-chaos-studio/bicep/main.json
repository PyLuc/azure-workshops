{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.8.9.13224",
      "templateHash": "13718882707579759420"
    }
  },
  "variables": {
    "location": "[resourceGroup().location]"
  },
  "resources": [
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2022-01-01",
      "name": "chaos-vnet",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.100.0.0/16"
          ]
        },
        "subnets": [
          {
            "name": "aks",
            "properties": {
              "addressPrefix": "10.100.0.0/22"
            }
          },
          {
            "name": "vms",
            "properties": {
              "addressPrefix": "10.100.4.0/24"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-09-01",
      "name": "[format('storage{0}', uniqueString(resourceGroup().id))]",
      "location": "[variables('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2"
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2021-06-01",
      "name": "[format('logs{0}', uniqueString(resourceGroup().id))]",
      "location": "[variables('location')]"
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "appinsights",
      "location": "[variables('location')]",
      "kind": "Web",
      "properties": {
        "Application_Type": "Web",
        "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', format('logs{0}', uniqueString(resourceGroup().id)))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', format('logs{0}', uniqueString(resourceGroup().id)))]"
      ]
    },
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "apiVersion": "2022-01-31-preview",
      "name": "chaosidentity",
      "location": "[variables('location')]"
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2020-10-01-preview",
      "name": "[guid('chaosAgentsRbac')]",
      "properties": {
        "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'chaosidentity')).principalId]",
        "roleDefinitionId": "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'chaosidentity')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "linuxVm1",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "appInsightsKey": {
            "value": "[reference(resourceId('Microsoft.Insights/components', 'appinsights')).InstrumentationKey]"
          },
          "diagnosticsBlobUri": {
            "value": "[reference(resourceId('Microsoft.Storage/storageAccounts', format('storage{0}', uniqueString(resourceGroup().id)))).primaryEndpoints.blob]"
          },
          "chaosIdentityClientId": {
            "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'chaosidentity')).clientId]"
          },
          "chaosIdentityId": {
            "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'chaosidentity')]"
          },
          "chaosIdentityTenantId": {
            "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'chaosidentity')).tenantId]"
          },
          "location": {
            "value": "[variables('location')]"
          },
          "subnetId": {
            "value": "[format('{0}/subnets/vms', resourceId('Microsoft.Network/virtualNetworks', 'chaos-vnet'))]"
          },
          "vmName": {
            "value": "linuxVm1"
          },
          "zone": {
            "value": "1"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.8.9.13224",
              "templateHash": "8403273817329381577"
            }
          },
          "parameters": {
            "vmName": {
              "type": "string"
            },
            "zone": {
              "type": "string"
            },
            "chaosIdentityId": {
              "type": "string"
            },
            "chaosIdentityClientId": {
              "type": "string"
            },
            "chaosIdentityTenantId": {
              "type": "string"
            },
            "subnetId": {
              "type": "string"
            },
            "diagnosticsBlobUri": {
              "type": "string"
            },
            "appInsightsKey": {
              "type": "string"
            },
            "location": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/networkInterfaces",
              "apiVersion": "2022-01-01",
              "name": "[format('{0}-nic', parameters('vmName'))]",
              "location": "[parameters('location')]",
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "ipconfig1",
                    "properties": {
                      "subnet": {
                        "id": "[parameters('subnetId')]"
                      }
                    }
                  }
                ],
                "networkSecurityGroup": {
                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-nsg', parameters('vmName')))]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-nsg', parameters('vmName')))]"
              ]
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2022-01-01",
              "name": "[format('{0}-nsg', parameters('vmName'))]",
              "location": "[parameters('location')]",
              "properties": {}
            },
            {
              "type": "Microsoft.Compute/virtualMachines",
              "apiVersion": "2022-03-01",
              "name": "[parameters('vmName')]",
              "location": "[parameters('location')]",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', parameters('chaosIdentityId'))]": {}
                }
              },
              "zones": [
                "[parameters('zone')]"
              ],
              "properties": {
                "hardwareProfile": {
                  "vmSize": "Standard_B1s"
                },
                "diagnosticsProfile": {
                  "bootDiagnostics": {
                    "enabled": true,
                    "storageUri": "[parameters('diagnosticsBlobUri')]"
                  }
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', parameters('vmName')))]"
                    }
                  ]
                },
                "osProfile": {
                  "computerName": "[parameters('vmName')]",
                  "adminUsername": "tomas",
                  "adminPassword": "Azure12345678",
                  "linuxConfiguration": {
                    "disablePasswordAuthentication": false
                  },
                  "customData": "[base64('#!/bin/bash\napt update && apt install -y nginx stress-ng\n')]"
                },
                "storageProfile": {
                  "imageReference": {
                    "publisher": "Canonical",
                    "offer": "UbuntuServer",
                    "sku": "18.04-LTS",
                    "version": "latest"
                  },
                  "osDisk": {
                    "name": "[format('{0}-osdisk1', parameters('vmName'))]",
                    "createOption": "FromImage",
                    "osType": "Linux",
                    "managedDisk": {
                      "storageAccountType": "Standard_LRS"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', parameters('vmName')))]"
              ]
            },
            {
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2022-03-01",
              "name": "[format('{0}/{1}', parameters('vmName'), 'ChaosAgent')]",
              "location": "[parameters('location')]",
              "properties": {
                "publisher": "Microsoft.Azure.Chaos",
                "type": "ChaosLinuxAgent",
                "autoUpgradeMinorVersion": true,
                "enableAutomaticUpgrade": false,
                "typeHandlerVersion": "1.0",
                "settings": {
                  "profile": "[reference(extensionResourceId(resourceId('Microsoft.Compute/virtualMachines', parameters('vmName')), 'Microsoft.Chaos/targets', 'Microsoft-Agent')).agentProfileId]",
                  "auth.msi.clientid": "[parameters('chaosIdentityClientId')]",
                  "appinsightskey": "[parameters('appInsightsKey')]"
                }
              },
              "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.Compute/virtualMachines', parameters('vmName')), 'Microsoft.Chaos/targets', 'Microsoft-Agent')]",
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
              ]
            },
            {
              "type": "Microsoft.Chaos/targets",
              "apiVersion": "2021-09-15-preview",
              "scope": "[format('Microsoft.Compute/virtualMachines/{0}', parameters('vmName'))]",
              "name": "microsoft-virtualmachine",
              "properties": {},
              "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
              ]
            },
            {
              "type": "Microsoft.Chaos/targets/capabilities",
              "apiVersion": "2021-09-15-preview",
              "scope": "[format('Microsoft.Compute/virtualMachines/{0}', parameters('vmName'))]",
              "name": "microsoft-virtualmachine/Shutdown-1.0",
              "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.Compute/virtualMachines', parameters('vmName')), 'Microsoft.Chaos/targets', 'microsoft-virtualmachine')]",
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
              ]
            },
            {
              "type": "Microsoft.Chaos/targets",
              "apiVersion": "2021-09-15-preview",
              "scope": "[format('Microsoft.Compute/virtualMachines/{0}', parameters('vmName'))]",
              "name": "Microsoft-Agent",
              "properties": {
                "identities": [
                  {
                    "type": "AzureManagedIdentity",
                    "clientId": "[parameters('chaosIdentityClientId')]",
                    "tenantId": "[parameters('chaosIdentityTenantId')]"
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
              ]
            },
            {
              "type": "Microsoft.Chaos/targets/capabilities",
              "apiVersion": "2021-09-15-preview",
              "scope": "[format('Microsoft.Compute/virtualMachines/{0}', parameters('vmName'))]",
              "name": "Microsoft-Agent/CPUPressure-1.0",
              "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.Compute/virtualMachines', parameters('vmName')), 'Microsoft.Chaos/targets', 'Microsoft-Agent')]",
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
              ]
            },
            {
              "type": "Microsoft.Chaos/targets/capabilities",
              "apiVersion": "2021-09-15-preview",
              "scope": "[format('Microsoft.Compute/virtualMachines/{0}', parameters('vmName'))]",
              "name": "Microsoft-Agent/PhysicalMemoryPressure-1.0",
              "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.Compute/virtualMachines', parameters('vmName')), 'Microsoft.Chaos/targets', 'Microsoft-Agent')]",
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
              ]
            },
            {
              "type": "Microsoft.Chaos/targets/capabilities",
              "apiVersion": "2021-09-15-preview",
              "scope": "[format('Microsoft.Compute/virtualMachines/{0}', parameters('vmName'))]",
              "name": "Microsoft-Agent/VirtualMemoryPressure-1.0",
              "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.Compute/virtualMachines', parameters('vmName')), 'Microsoft.Chaos/targets', 'Microsoft-Agent')]",
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
              ]
            },
            {
              "type": "Microsoft.Chaos/targets/capabilities",
              "apiVersion": "2021-09-15-preview",
              "scope": "[format('Microsoft.Compute/virtualMachines/{0}', parameters('vmName'))]",
              "name": "Microsoft-Agent/DiskIOPressure-1.0",
              "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.Compute/virtualMachines', parameters('vmName')), 'Microsoft.Chaos/targets', 'Microsoft-Agent')]",
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
              ]
            },
            {
              "type": "Microsoft.Chaos/targets/capabilities",
              "apiVersion": "2021-09-15-preview",
              "scope": "[format('Microsoft.Compute/virtualMachines/{0}', parameters('vmName'))]",
              "name": "Microsoft-Agent/LinuxDiskIOPressure-1.0",
              "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.Compute/virtualMachines', parameters('vmName')), 'Microsoft.Chaos/targets', 'Microsoft-Agent')]",
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
              ]
            },
            {
              "type": "Microsoft.Chaos/targets/capabilities",
              "apiVersion": "2021-09-15-preview",
              "scope": "[format('Microsoft.Compute/virtualMachines/{0}', parameters('vmName'))]",
              "name": "Microsoft-Agent/StopService-1.0",
              "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.Compute/virtualMachines', parameters('vmName')), 'Microsoft.Chaos/targets', 'Microsoft-Agent')]",
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
              ]
            },
            {
              "type": "Microsoft.Chaos/targets/capabilities",
              "apiVersion": "2021-09-15-preview",
              "scope": "[format('Microsoft.Compute/virtualMachines/{0}', parameters('vmName'))]",
              "name": "Microsoft-Agent/TimeChange-1.0",
              "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.Compute/virtualMachines', parameters('vmName')), 'Microsoft.Chaos/targets', 'Microsoft-Agent')]",
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
              ]
            },
            {
              "type": "Microsoft.Chaos/targets/capabilities",
              "apiVersion": "2021-09-15-preview",
              "scope": "[format('Microsoft.Compute/virtualMachines/{0}', parameters('vmName'))]",
              "name": "Microsoft-Agent/KillProcess-1.0",
              "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.Compute/virtualMachines', parameters('vmName')), 'Microsoft.Chaos/targets', 'Microsoft-Agent')]",
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
              ]
            },
            {
              "type": "Microsoft.Chaos/targets/capabilities",
              "apiVersion": "2021-09-15-preview",
              "scope": "[format('Microsoft.Compute/virtualMachines/{0}', parameters('vmName'))]",
              "name": "Microsoft-Agent/NetworkLatency-1.0",
              "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.Compute/virtualMachines', parameters('vmName')), 'Microsoft.Chaos/targets', 'Microsoft-Agent')]",
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
              ]
            },
            {
              "type": "Microsoft.Chaos/targets/capabilities",
              "apiVersion": "2021-09-15-preview",
              "scope": "[format('Microsoft.Compute/virtualMachines/{0}', parameters('vmName'))]",
              "name": "Microsoft-Agent/NetworkDisconnect-1.0",
              "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.Compute/virtualMachines', parameters('vmName')), 'Microsoft.Chaos/targets', 'Microsoft-Agent')]",
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
              ]
            },
            {
              "type": "Microsoft.Chaos/targets/capabilities",
              "apiVersion": "2021-09-15-preview",
              "scope": "[format('Microsoft.Compute/virtualMachines/{0}', parameters('vmName'))]",
              "name": "Microsoft-Agent/NetworkDisconnectViaFirewall-1.0",
              "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.Compute/virtualMachines', parameters('vmName')), 'Microsoft.Chaos/targets', 'Microsoft-Agent')]",
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
              ]
            },
            {
              "type": "Microsoft.Chaos/targets/capabilities",
              "apiVersion": "2021-09-15-preview",
              "scope": "[format('Microsoft.Compute/virtualMachines/{0}', parameters('vmName'))]",
              "name": "Microsoft-Agent/StressNg-1.0",
              "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.Compute/virtualMachines', parameters('vmName')), 'Microsoft.Chaos/targets', 'Microsoft-Agent')]",
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
              ]
            },
            {
              "type": "Microsoft.Chaos/targets/capabilities",
              "apiVersion": "2021-09-15-preview",
              "scope": "[format('Microsoft.Compute/virtualMachines/{0}', parameters('vmName'))]",
              "name": "Microsoft-Agent/DnsFailure-1.0",
              "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.Compute/virtualMachines', parameters('vmName')), 'Microsoft.Chaos/targets', 'Microsoft-Agent')]",
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
              ]
            },
            {
              "type": "Microsoft.Chaos/targets",
              "apiVersion": "2021-09-15-preview",
              "scope": "[format('Microsoft.Network/networkSecurityGroups/{0}', format('{0}-nsg', parameters('vmName')))]",
              "name": "microsoft-networksecuritygroup",
              "properties": {},
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-nsg', parameters('vmName')))]"
              ]
            },
            {
              "type": "Microsoft.Chaos/targets/capabilities",
              "apiVersion": "2021-09-15-preview",
              "scope": "[format('Microsoft.Network/networkSecurityGroups/{0}', format('{0}-nsg', parameters('vmName')))]",
              "name": "microsoft-networksecuritygroup/SecurityRule-1.0",
              "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-nsg', parameters('vmName'))), 'Microsoft.Chaos/targets', 'microsoft-networksecuritygroup')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-nsg', parameters('vmName')))]"
              ]
            }
          ],
          "outputs": {
            "vmId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', 'appinsights')]",
        "[resourceId('Microsoft.Storage/storageAccounts', format('storage{0}', uniqueString(resourceGroup().id)))]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'chaosidentity')]",
        "[resourceId('Microsoft.Network/virtualNetworks', 'chaos-vnet')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "linuxVm2",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "appInsightsKey": {
            "value": "[reference(resourceId('Microsoft.Insights/components', 'appinsights')).InstrumentationKey]"
          },
          "diagnosticsBlobUri": {
            "value": "[reference(resourceId('Microsoft.Storage/storageAccounts', format('storage{0}', uniqueString(resourceGroup().id)))).primaryEndpoints.blob]"
          },
          "chaosIdentityClientId": {
            "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'chaosidentity')).clientId]"
          },
          "chaosIdentityId": {
            "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'chaosidentity')]"
          },
          "chaosIdentityTenantId": {
            "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'chaosidentity')).tenantId]"
          },
          "location": {
            "value": "[variables('location')]"
          },
          "subnetId": {
            "value": "[format('{0}/subnets/vms', resourceId('Microsoft.Network/virtualNetworks', 'chaos-vnet'))]"
          },
          "vmName": {
            "value": "linuxVm2"
          },
          "zone": {
            "value": "2"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.8.9.13224",
              "templateHash": "8403273817329381577"
            }
          },
          "parameters": {
            "vmName": {
              "type": "string"
            },
            "zone": {
              "type": "string"
            },
            "chaosIdentityId": {
              "type": "string"
            },
            "chaosIdentityClientId": {
              "type": "string"
            },
            "chaosIdentityTenantId": {
              "type": "string"
            },
            "subnetId": {
              "type": "string"
            },
            "diagnosticsBlobUri": {
              "type": "string"
            },
            "appInsightsKey": {
              "type": "string"
            },
            "location": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/networkInterfaces",
              "apiVersion": "2022-01-01",
              "name": "[format('{0}-nic', parameters('vmName'))]",
              "location": "[parameters('location')]",
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "ipconfig1",
                    "properties": {
                      "subnet": {
                        "id": "[parameters('subnetId')]"
                      }
                    }
                  }
                ],
                "networkSecurityGroup": {
                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-nsg', parameters('vmName')))]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-nsg', parameters('vmName')))]"
              ]
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2022-01-01",
              "name": "[format('{0}-nsg', parameters('vmName'))]",
              "location": "[parameters('location')]",
              "properties": {}
            },
            {
              "type": "Microsoft.Compute/virtualMachines",
              "apiVersion": "2022-03-01",
              "name": "[parameters('vmName')]",
              "location": "[parameters('location')]",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', parameters('chaosIdentityId'))]": {}
                }
              },
              "zones": [
                "[parameters('zone')]"
              ],
              "properties": {
                "hardwareProfile": {
                  "vmSize": "Standard_B1s"
                },
                "diagnosticsProfile": {
                  "bootDiagnostics": {
                    "enabled": true,
                    "storageUri": "[parameters('diagnosticsBlobUri')]"
                  }
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', parameters('vmName')))]"
                    }
                  ]
                },
                "osProfile": {
                  "computerName": "[parameters('vmName')]",
                  "adminUsername": "tomas",
                  "adminPassword": "Azure12345678",
                  "linuxConfiguration": {
                    "disablePasswordAuthentication": false
                  },
                  "customData": "[base64('#!/bin/bash\napt update && apt install -y nginx stress-ng\n')]"
                },
                "storageProfile": {
                  "imageReference": {
                    "publisher": "Canonical",
                    "offer": "UbuntuServer",
                    "sku": "18.04-LTS",
                    "version": "latest"
                  },
                  "osDisk": {
                    "name": "[format('{0}-osdisk1', parameters('vmName'))]",
                    "createOption": "FromImage",
                    "osType": "Linux",
                    "managedDisk": {
                      "storageAccountType": "Standard_LRS"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', parameters('vmName')))]"
              ]
            },
            {
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2022-03-01",
              "name": "[format('{0}/{1}', parameters('vmName'), 'ChaosAgent')]",
              "location": "[parameters('location')]",
              "properties": {
                "publisher": "Microsoft.Azure.Chaos",
                "type": "ChaosLinuxAgent",
                "autoUpgradeMinorVersion": true,
                "enableAutomaticUpgrade": false,
                "typeHandlerVersion": "1.0",
                "settings": {
                  "profile": "[reference(extensionResourceId(resourceId('Microsoft.Compute/virtualMachines', parameters('vmName')), 'Microsoft.Chaos/targets', 'Microsoft-Agent')).agentProfileId]",
                  "auth.msi.clientid": "[parameters('chaosIdentityClientId')]",
                  "appinsightskey": "[parameters('appInsightsKey')]"
                }
              },
              "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.Compute/virtualMachines', parameters('vmName')), 'Microsoft.Chaos/targets', 'Microsoft-Agent')]",
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
              ]
            },
            {
              "type": "Microsoft.Chaos/targets",
              "apiVersion": "2021-09-15-preview",
              "scope": "[format('Microsoft.Compute/virtualMachines/{0}', parameters('vmName'))]",
              "name": "microsoft-virtualmachine",
              "properties": {},
              "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
              ]
            },
            {
              "type": "Microsoft.Chaos/targets/capabilities",
              "apiVersion": "2021-09-15-preview",
              "scope": "[format('Microsoft.Compute/virtualMachines/{0}', parameters('vmName'))]",
              "name": "microsoft-virtualmachine/Shutdown-1.0",
              "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.Compute/virtualMachines', parameters('vmName')), 'Microsoft.Chaos/targets', 'microsoft-virtualmachine')]",
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
              ]
            },
            {
              "type": "Microsoft.Chaos/targets",
              "apiVersion": "2021-09-15-preview",
              "scope": "[format('Microsoft.Compute/virtualMachines/{0}', parameters('vmName'))]",
              "name": "Microsoft-Agent",
              "properties": {
                "identities": [
                  {
                    "type": "AzureManagedIdentity",
                    "clientId": "[parameters('chaosIdentityClientId')]",
                    "tenantId": "[parameters('chaosIdentityTenantId')]"
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
              ]
            },
            {
              "type": "Microsoft.Chaos/targets/capabilities",
              "apiVersion": "2021-09-15-preview",
              "scope": "[format('Microsoft.Compute/virtualMachines/{0}', parameters('vmName'))]",
              "name": "Microsoft-Agent/CPUPressure-1.0",
              "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.Compute/virtualMachines', parameters('vmName')), 'Microsoft.Chaos/targets', 'Microsoft-Agent')]",
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
              ]
            },
            {
              "type": "Microsoft.Chaos/targets/capabilities",
              "apiVersion": "2021-09-15-preview",
              "scope": "[format('Microsoft.Compute/virtualMachines/{0}', parameters('vmName'))]",
              "name": "Microsoft-Agent/PhysicalMemoryPressure-1.0",
              "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.Compute/virtualMachines', parameters('vmName')), 'Microsoft.Chaos/targets', 'Microsoft-Agent')]",
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
              ]
            },
            {
              "type": "Microsoft.Chaos/targets/capabilities",
              "apiVersion": "2021-09-15-preview",
              "scope": "[format('Microsoft.Compute/virtualMachines/{0}', parameters('vmName'))]",
              "name": "Microsoft-Agent/VirtualMemoryPressure-1.0",
              "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.Compute/virtualMachines', parameters('vmName')), 'Microsoft.Chaos/targets', 'Microsoft-Agent')]",
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
              ]
            },
            {
              "type": "Microsoft.Chaos/targets/capabilities",
              "apiVersion": "2021-09-15-preview",
              "scope": "[format('Microsoft.Compute/virtualMachines/{0}', parameters('vmName'))]",
              "name": "Microsoft-Agent/DiskIOPressure-1.0",
              "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.Compute/virtualMachines', parameters('vmName')), 'Microsoft.Chaos/targets', 'Microsoft-Agent')]",
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
              ]
            },
            {
              "type": "Microsoft.Chaos/targets/capabilities",
              "apiVersion": "2021-09-15-preview",
              "scope": "[format('Microsoft.Compute/virtualMachines/{0}', parameters('vmName'))]",
              "name": "Microsoft-Agent/LinuxDiskIOPressure-1.0",
              "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.Compute/virtualMachines', parameters('vmName')), 'Microsoft.Chaos/targets', 'Microsoft-Agent')]",
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
              ]
            },
            {
              "type": "Microsoft.Chaos/targets/capabilities",
              "apiVersion": "2021-09-15-preview",
              "scope": "[format('Microsoft.Compute/virtualMachines/{0}', parameters('vmName'))]",
              "name": "Microsoft-Agent/StopService-1.0",
              "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.Compute/virtualMachines', parameters('vmName')), 'Microsoft.Chaos/targets', 'Microsoft-Agent')]",
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
              ]
            },
            {
              "type": "Microsoft.Chaos/targets/capabilities",
              "apiVersion": "2021-09-15-preview",
              "scope": "[format('Microsoft.Compute/virtualMachines/{0}', parameters('vmName'))]",
              "name": "Microsoft-Agent/TimeChange-1.0",
              "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.Compute/virtualMachines', parameters('vmName')), 'Microsoft.Chaos/targets', 'Microsoft-Agent')]",
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
              ]
            },
            {
              "type": "Microsoft.Chaos/targets/capabilities",
              "apiVersion": "2021-09-15-preview",
              "scope": "[format('Microsoft.Compute/virtualMachines/{0}', parameters('vmName'))]",
              "name": "Microsoft-Agent/KillProcess-1.0",
              "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.Compute/virtualMachines', parameters('vmName')), 'Microsoft.Chaos/targets', 'Microsoft-Agent')]",
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
              ]
            },
            {
              "type": "Microsoft.Chaos/targets/capabilities",
              "apiVersion": "2021-09-15-preview",
              "scope": "[format('Microsoft.Compute/virtualMachines/{0}', parameters('vmName'))]",
              "name": "Microsoft-Agent/NetworkLatency-1.0",
              "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.Compute/virtualMachines', parameters('vmName')), 'Microsoft.Chaos/targets', 'Microsoft-Agent')]",
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
              ]
            },
            {
              "type": "Microsoft.Chaos/targets/capabilities",
              "apiVersion": "2021-09-15-preview",
              "scope": "[format('Microsoft.Compute/virtualMachines/{0}', parameters('vmName'))]",
              "name": "Microsoft-Agent/NetworkDisconnect-1.0",
              "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.Compute/virtualMachines', parameters('vmName')), 'Microsoft.Chaos/targets', 'Microsoft-Agent')]",
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
              ]
            },
            {
              "type": "Microsoft.Chaos/targets/capabilities",
              "apiVersion": "2021-09-15-preview",
              "scope": "[format('Microsoft.Compute/virtualMachines/{0}', parameters('vmName'))]",
              "name": "Microsoft-Agent/NetworkDisconnectViaFirewall-1.0",
              "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.Compute/virtualMachines', parameters('vmName')), 'Microsoft.Chaos/targets', 'Microsoft-Agent')]",
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
              ]
            },
            {
              "type": "Microsoft.Chaos/targets/capabilities",
              "apiVersion": "2021-09-15-preview",
              "scope": "[format('Microsoft.Compute/virtualMachines/{0}', parameters('vmName'))]",
              "name": "Microsoft-Agent/StressNg-1.0",
              "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.Compute/virtualMachines', parameters('vmName')), 'Microsoft.Chaos/targets', 'Microsoft-Agent')]",
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
              ]
            },
            {
              "type": "Microsoft.Chaos/targets/capabilities",
              "apiVersion": "2021-09-15-preview",
              "scope": "[format('Microsoft.Compute/virtualMachines/{0}', parameters('vmName'))]",
              "name": "Microsoft-Agent/DnsFailure-1.0",
              "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.Compute/virtualMachines', parameters('vmName')), 'Microsoft.Chaos/targets', 'Microsoft-Agent')]",
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
              ]
            },
            {
              "type": "Microsoft.Chaos/targets",
              "apiVersion": "2021-09-15-preview",
              "scope": "[format('Microsoft.Network/networkSecurityGroups/{0}', format('{0}-nsg', parameters('vmName')))]",
              "name": "microsoft-networksecuritygroup",
              "properties": {},
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-nsg', parameters('vmName')))]"
              ]
            },
            {
              "type": "Microsoft.Chaos/targets/capabilities",
              "apiVersion": "2021-09-15-preview",
              "scope": "[format('Microsoft.Network/networkSecurityGroups/{0}', format('{0}-nsg', parameters('vmName')))]",
              "name": "microsoft-networksecuritygroup/SecurityRule-1.0",
              "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-nsg', parameters('vmName'))), 'Microsoft.Chaos/targets', 'microsoft-networksecuritygroup')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-nsg', parameters('vmName')))]"
              ]
            }
          ],
          "outputs": {
            "vmId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', 'appinsights')]",
        "[resourceId('Microsoft.Storage/storageAccounts', format('storage{0}', uniqueString(resourceGroup().id)))]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'chaosidentity')]",
        "[resourceId('Microsoft.Network/virtualNetworks', 'chaos-vnet')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "windowsVm1",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "appInsightsKey": {
            "value": "[reference(resourceId('Microsoft.Insights/components', 'appinsights')).InstrumentationKey]"
          },
          "diagnosticsBlobUri": {
            "value": "[reference(resourceId('Microsoft.Storage/storageAccounts', format('storage{0}', uniqueString(resourceGroup().id)))).primaryEndpoints.blob]"
          },
          "chaosIdentityClientId": {
            "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'chaosidentity')).clientId]"
          },
          "chaosIdentityId": {
            "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'chaosidentity')]"
          },
          "chaosIdentityTenantId": {
            "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'chaosidentity')).tenantId]"
          },
          "location": {
            "value": "[variables('location')]"
          },
          "subnetId": {
            "value": "[format('{0}/subnets/vms', resourceId('Microsoft.Network/virtualNetworks', 'chaos-vnet'))]"
          },
          "vmName": {
            "value": "windowsVm1"
          },
          "zone": {
            "value": "1"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.8.9.13224",
              "templateHash": "14536371765549656185"
            }
          },
          "parameters": {
            "vmName": {
              "type": "string"
            },
            "zone": {
              "type": "string"
            },
            "chaosIdentityId": {
              "type": "string"
            },
            "chaosIdentityClientId": {
              "type": "string"
            },
            "chaosIdentityTenantId": {
              "type": "string"
            },
            "subnetId": {
              "type": "string"
            },
            "diagnosticsBlobUri": {
              "type": "string"
            },
            "appInsightsKey": {
              "type": "string"
            },
            "location": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/networkInterfaces",
              "apiVersion": "2022-01-01",
              "name": "[format('{0}-nic', parameters('vmName'))]",
              "location": "[parameters('location')]",
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "ipconfig1",
                    "properties": {
                      "subnet": {
                        "id": "[parameters('subnetId')]"
                      }
                    }
                  }
                ],
                "networkSecurityGroup": {
                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-nsg', parameters('vmName')))]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-nsg', parameters('vmName')))]"
              ]
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2022-01-01",
              "name": "[format('{0}-nsg', parameters('vmName'))]",
              "location": "[parameters('location')]",
              "properties": {}
            },
            {
              "type": "Microsoft.Compute/virtualMachines",
              "apiVersion": "2022-03-01",
              "name": "[parameters('vmName')]",
              "location": "[parameters('location')]",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', parameters('chaosIdentityId'))]": {}
                }
              },
              "zones": [
                "[parameters('zone')]"
              ],
              "properties": {
                "hardwareProfile": {
                  "vmSize": "Standard_B2ms"
                },
                "diagnosticsProfile": {
                  "bootDiagnostics": {
                    "enabled": true,
                    "storageUri": "[parameters('diagnosticsBlobUri')]"
                  }
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', parameters('vmName')))]"
                    }
                  ]
                },
                "osProfile": {
                  "computerName": "[parameters('vmName')]",
                  "adminUsername": "tomas",
                  "adminPassword": "Azure12345678"
                },
                "storageProfile": {
                  "imageReference": {
                    "publisher": "MicrosoftWindowsServer",
                    "offer": "WindowsServer",
                    "sku": "2022-Datacenter",
                    "version": "latest"
                  },
                  "osDisk": {
                    "name": "[format('{0}-osdisk1', parameters('vmName'))]",
                    "createOption": "FromImage",
                    "osType": "Windows",
                    "managedDisk": {
                      "storageAccountType": "Standard_LRS"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', parameters('vmName')))]"
              ]
            },
            {
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2022-03-01",
              "name": "[format('{0}/{1}', parameters('vmName'), 'ChaosAgent')]",
              "location": "[parameters('location')]",
              "properties": {
                "publisher": "Microsoft.Azure.Chaos",
                "type": "ChaosWindowsAgent",
                "autoUpgradeMinorVersion": true,
                "enableAutomaticUpgrade": false,
                "typeHandlerVersion": "1.0",
                "settings": {
                  "profile": "[reference(extensionResourceId(resourceId('Microsoft.Compute/virtualMachines', parameters('vmName')), 'Microsoft.Chaos/targets', 'Microsoft-Agent')).agentProfileId]",
                  "auth.msi.clientid": "[parameters('chaosIdentityClientId')]",
                  "appinsightskey": "[parameters('appInsightsKey')]"
                }
              },
              "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.Compute/virtualMachines', parameters('vmName')), 'Microsoft.Chaos/targets', 'Microsoft-Agent')]",
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
              ]
            },
            {
              "type": "Microsoft.Chaos/targets",
              "apiVersion": "2021-09-15-preview",
              "scope": "[format('Microsoft.Compute/virtualMachines/{0}', parameters('vmName'))]",
              "name": "microsoft-virtualmachine",
              "properties": {},
              "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
              ]
            },
            {
              "type": "Microsoft.Chaos/targets/capabilities",
              "apiVersion": "2021-09-15-preview",
              "scope": "[format('Microsoft.Compute/virtualMachines/{0}', parameters('vmName'))]",
              "name": "microsoft-virtualmachine/Shutdown-1.0",
              "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.Compute/virtualMachines', parameters('vmName')), 'Microsoft.Chaos/targets', 'microsoft-virtualmachine')]",
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
              ]
            },
            {
              "type": "Microsoft.Chaos/targets",
              "apiVersion": "2021-09-15-preview",
              "scope": "[format('Microsoft.Compute/virtualMachines/{0}', parameters('vmName'))]",
              "name": "Microsoft-Agent",
              "properties": {
                "identities": [
                  {
                    "type": "AzureManagedIdentity",
                    "clientId": "[parameters('chaosIdentityClientId')]",
                    "tenantId": "[parameters('chaosIdentityTenantId')]"
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
              ]
            },
            {
              "type": "Microsoft.Chaos/targets/capabilities",
              "apiVersion": "2021-09-15-preview",
              "scope": "[format('Microsoft.Compute/virtualMachines/{0}', parameters('vmName'))]",
              "name": "Microsoft-Agent/CPUPressure-1.0",
              "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.Compute/virtualMachines', parameters('vmName')), 'Microsoft.Chaos/targets', 'Microsoft-Agent')]",
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
              ]
            },
            {
              "type": "Microsoft.Chaos/targets/capabilities",
              "apiVersion": "2021-09-15-preview",
              "scope": "[format('Microsoft.Compute/virtualMachines/{0}', parameters('vmName'))]",
              "name": "Microsoft-Agent/PhysicalMemoryPressure-1.0",
              "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.Compute/virtualMachines', parameters('vmName')), 'Microsoft.Chaos/targets', 'Microsoft-Agent')]",
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
              ]
            },
            {
              "type": "Microsoft.Chaos/targets/capabilities",
              "apiVersion": "2021-09-15-preview",
              "scope": "[format('Microsoft.Compute/virtualMachines/{0}', parameters('vmName'))]",
              "name": "Microsoft-Agent/VirtualMemoryPressure-1.0",
              "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.Compute/virtualMachines', parameters('vmName')), 'Microsoft.Chaos/targets', 'Microsoft-Agent')]",
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
              ]
            },
            {
              "type": "Microsoft.Chaos/targets/capabilities",
              "apiVersion": "2021-09-15-preview",
              "scope": "[format('Microsoft.Compute/virtualMachines/{0}', parameters('vmName'))]",
              "name": "Microsoft-Agent/DiskIOPressure-1.0",
              "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.Compute/virtualMachines', parameters('vmName')), 'Microsoft.Chaos/targets', 'Microsoft-Agent')]",
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
              ]
            },
            {
              "type": "Microsoft.Chaos/targets/capabilities",
              "apiVersion": "2021-09-15-preview",
              "scope": "[format('Microsoft.Compute/virtualMachines/{0}', parameters('vmName'))]",
              "name": "Microsoft-Agent/LinuxDiskIOPressure-1.0",
              "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.Compute/virtualMachines', parameters('vmName')), 'Microsoft.Chaos/targets', 'Microsoft-Agent')]",
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
              ]
            },
            {
              "type": "Microsoft.Chaos/targets/capabilities",
              "apiVersion": "2021-09-15-preview",
              "scope": "[format('Microsoft.Compute/virtualMachines/{0}', parameters('vmName'))]",
              "name": "Microsoft-Agent/StopService-1.0",
              "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.Compute/virtualMachines', parameters('vmName')), 'Microsoft.Chaos/targets', 'Microsoft-Agent')]",
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
              ]
            },
            {
              "type": "Microsoft.Chaos/targets/capabilities",
              "apiVersion": "2021-09-15-preview",
              "scope": "[format('Microsoft.Compute/virtualMachines/{0}', parameters('vmName'))]",
              "name": "Microsoft-Agent/TimeChange-1.0",
              "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.Compute/virtualMachines', parameters('vmName')), 'Microsoft.Chaos/targets', 'Microsoft-Agent')]",
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
              ]
            },
            {
              "type": "Microsoft.Chaos/targets/capabilities",
              "apiVersion": "2021-09-15-preview",
              "scope": "[format('Microsoft.Compute/virtualMachines/{0}', parameters('vmName'))]",
              "name": "Microsoft-Agent/KillProcess-1.0",
              "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.Compute/virtualMachines', parameters('vmName')), 'Microsoft.Chaos/targets', 'Microsoft-Agent')]",
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
              ]
            },
            {
              "type": "Microsoft.Chaos/targets/capabilities",
              "apiVersion": "2021-09-15-preview",
              "scope": "[format('Microsoft.Compute/virtualMachines/{0}', parameters('vmName'))]",
              "name": "Microsoft-Agent/NetworkLatency-1.0",
              "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.Compute/virtualMachines', parameters('vmName')), 'Microsoft.Chaos/targets', 'Microsoft-Agent')]",
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
              ]
            },
            {
              "type": "Microsoft.Chaos/targets/capabilities",
              "apiVersion": "2021-09-15-preview",
              "scope": "[format('Microsoft.Compute/virtualMachines/{0}', parameters('vmName'))]",
              "name": "Microsoft-Agent/NetworkDisconnect-1.0",
              "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.Compute/virtualMachines', parameters('vmName')), 'Microsoft.Chaos/targets', 'Microsoft-Agent')]",
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
              ]
            },
            {
              "type": "Microsoft.Chaos/targets/capabilities",
              "apiVersion": "2021-09-15-preview",
              "scope": "[format('Microsoft.Compute/virtualMachines/{0}', parameters('vmName'))]",
              "name": "Microsoft-Agent/NetworkDisconnectViaFirewall-1.0",
              "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.Compute/virtualMachines', parameters('vmName')), 'Microsoft.Chaos/targets', 'Microsoft-Agent')]",
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
              ]
            },
            {
              "type": "Microsoft.Chaos/targets/capabilities",
              "apiVersion": "2021-09-15-preview",
              "scope": "[format('Microsoft.Compute/virtualMachines/{0}', parameters('vmName'))]",
              "name": "Microsoft-Agent/StressNg-1.0",
              "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.Compute/virtualMachines', parameters('vmName')), 'Microsoft.Chaos/targets', 'Microsoft-Agent')]",
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
              ]
            },
            {
              "type": "Microsoft.Chaos/targets/capabilities",
              "apiVersion": "2021-09-15-preview",
              "scope": "[format('Microsoft.Compute/virtualMachines/{0}', parameters('vmName'))]",
              "name": "Microsoft-Agent/DnsFailure-1.0",
              "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.Compute/virtualMachines', parameters('vmName')), 'Microsoft.Chaos/targets', 'Microsoft-Agent')]",
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
              ]
            },
            {
              "type": "Microsoft.Chaos/targets",
              "apiVersion": "2021-09-15-preview",
              "scope": "[format('Microsoft.Network/networkSecurityGroups/{0}', format('{0}-nsg', parameters('vmName')))]",
              "name": "microsoft-networksecuritygroup",
              "properties": {},
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-nsg', parameters('vmName')))]"
              ]
            },
            {
              "type": "Microsoft.Chaos/targets/capabilities",
              "apiVersion": "2021-09-15-preview",
              "scope": "[format('Microsoft.Network/networkSecurityGroups/{0}', format('{0}-nsg', parameters('vmName')))]",
              "name": "microsoft-networksecuritygroup/SecurityRule-1.0",
              "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-nsg', parameters('vmName'))), 'Microsoft.Chaos/targets', 'microsoft-networksecuritygroup')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-nsg', parameters('vmName')))]"
              ]
            }
          ],
          "outputs": {
            "vmId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', 'appinsights')]",
        "[resourceId('Microsoft.Storage/storageAccounts', format('storage{0}', uniqueString(resourceGroup().id)))]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'chaosidentity')]",
        "[resourceId('Microsoft.Network/virtualNetworks', 'chaos-vnet')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "windowsVm2",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "appInsightsKey": {
            "value": "[reference(resourceId('Microsoft.Insights/components', 'appinsights')).InstrumentationKey]"
          },
          "diagnosticsBlobUri": {
            "value": "[reference(resourceId('Microsoft.Storage/storageAccounts', format('storage{0}', uniqueString(resourceGroup().id)))).primaryEndpoints.blob]"
          },
          "chaosIdentityClientId": {
            "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'chaosidentity')).clientId]"
          },
          "chaosIdentityId": {
            "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'chaosidentity')]"
          },
          "chaosIdentityTenantId": {
            "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'chaosidentity')).tenantId]"
          },
          "location": {
            "value": "[variables('location')]"
          },
          "subnetId": {
            "value": "[format('{0}/subnets/vms', resourceId('Microsoft.Network/virtualNetworks', 'chaos-vnet'))]"
          },
          "vmName": {
            "value": "windowsVm2"
          },
          "zone": {
            "value": "2"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.8.9.13224",
              "templateHash": "14536371765549656185"
            }
          },
          "parameters": {
            "vmName": {
              "type": "string"
            },
            "zone": {
              "type": "string"
            },
            "chaosIdentityId": {
              "type": "string"
            },
            "chaosIdentityClientId": {
              "type": "string"
            },
            "chaosIdentityTenantId": {
              "type": "string"
            },
            "subnetId": {
              "type": "string"
            },
            "diagnosticsBlobUri": {
              "type": "string"
            },
            "appInsightsKey": {
              "type": "string"
            },
            "location": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/networkInterfaces",
              "apiVersion": "2022-01-01",
              "name": "[format('{0}-nic', parameters('vmName'))]",
              "location": "[parameters('location')]",
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "ipconfig1",
                    "properties": {
                      "subnet": {
                        "id": "[parameters('subnetId')]"
                      }
                    }
                  }
                ],
                "networkSecurityGroup": {
                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-nsg', parameters('vmName')))]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-nsg', parameters('vmName')))]"
              ]
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2022-01-01",
              "name": "[format('{0}-nsg', parameters('vmName'))]",
              "location": "[parameters('location')]",
              "properties": {}
            },
            {
              "type": "Microsoft.Compute/virtualMachines",
              "apiVersion": "2022-03-01",
              "name": "[parameters('vmName')]",
              "location": "[parameters('location')]",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', parameters('chaosIdentityId'))]": {}
                }
              },
              "zones": [
                "[parameters('zone')]"
              ],
              "properties": {
                "hardwareProfile": {
                  "vmSize": "Standard_B2ms"
                },
                "diagnosticsProfile": {
                  "bootDiagnostics": {
                    "enabled": true,
                    "storageUri": "[parameters('diagnosticsBlobUri')]"
                  }
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', parameters('vmName')))]"
                    }
                  ]
                },
                "osProfile": {
                  "computerName": "[parameters('vmName')]",
                  "adminUsername": "tomas",
                  "adminPassword": "Azure12345678"
                },
                "storageProfile": {
                  "imageReference": {
                    "publisher": "MicrosoftWindowsServer",
                    "offer": "WindowsServer",
                    "sku": "2022-Datacenter",
                    "version": "latest"
                  },
                  "osDisk": {
                    "name": "[format('{0}-osdisk1', parameters('vmName'))]",
                    "createOption": "FromImage",
                    "osType": "Windows",
                    "managedDisk": {
                      "storageAccountType": "Standard_LRS"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', parameters('vmName')))]"
              ]
            },
            {
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2022-03-01",
              "name": "[format('{0}/{1}', parameters('vmName'), 'ChaosAgent')]",
              "location": "[parameters('location')]",
              "properties": {
                "publisher": "Microsoft.Azure.Chaos",
                "type": "ChaosWindowsAgent",
                "autoUpgradeMinorVersion": true,
                "enableAutomaticUpgrade": false,
                "typeHandlerVersion": "1.0",
                "settings": {
                  "profile": "[reference(extensionResourceId(resourceId('Microsoft.Compute/virtualMachines', parameters('vmName')), 'Microsoft.Chaos/targets', 'Microsoft-Agent')).agentProfileId]",
                  "auth.msi.clientid": "[parameters('chaosIdentityClientId')]",
                  "appinsightskey": "[parameters('appInsightsKey')]"
                }
              },
              "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.Compute/virtualMachines', parameters('vmName')), 'Microsoft.Chaos/targets', 'Microsoft-Agent')]",
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
              ]
            },
            {
              "type": "Microsoft.Chaos/targets",
              "apiVersion": "2021-09-15-preview",
              "scope": "[format('Microsoft.Compute/virtualMachines/{0}', parameters('vmName'))]",
              "name": "microsoft-virtualmachine",
              "properties": {},
              "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
              ]
            },
            {
              "type": "Microsoft.Chaos/targets/capabilities",
              "apiVersion": "2021-09-15-preview",
              "scope": "[format('Microsoft.Compute/virtualMachines/{0}', parameters('vmName'))]",
              "name": "microsoft-virtualmachine/Shutdown-1.0",
              "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.Compute/virtualMachines', parameters('vmName')), 'Microsoft.Chaos/targets', 'microsoft-virtualmachine')]",
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
              ]
            },
            {
              "type": "Microsoft.Chaos/targets",
              "apiVersion": "2021-09-15-preview",
              "scope": "[format('Microsoft.Compute/virtualMachines/{0}', parameters('vmName'))]",
              "name": "Microsoft-Agent",
              "properties": {
                "identities": [
                  {
                    "type": "AzureManagedIdentity",
                    "clientId": "[parameters('chaosIdentityClientId')]",
                    "tenantId": "[parameters('chaosIdentityTenantId')]"
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
              ]
            },
            {
              "type": "Microsoft.Chaos/targets/capabilities",
              "apiVersion": "2021-09-15-preview",
              "scope": "[format('Microsoft.Compute/virtualMachines/{0}', parameters('vmName'))]",
              "name": "Microsoft-Agent/CPUPressure-1.0",
              "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.Compute/virtualMachines', parameters('vmName')), 'Microsoft.Chaos/targets', 'Microsoft-Agent')]",
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
              ]
            },
            {
              "type": "Microsoft.Chaos/targets/capabilities",
              "apiVersion": "2021-09-15-preview",
              "scope": "[format('Microsoft.Compute/virtualMachines/{0}', parameters('vmName'))]",
              "name": "Microsoft-Agent/PhysicalMemoryPressure-1.0",
              "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.Compute/virtualMachines', parameters('vmName')), 'Microsoft.Chaos/targets', 'Microsoft-Agent')]",
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
              ]
            },
            {
              "type": "Microsoft.Chaos/targets/capabilities",
              "apiVersion": "2021-09-15-preview",
              "scope": "[format('Microsoft.Compute/virtualMachines/{0}', parameters('vmName'))]",
              "name": "Microsoft-Agent/VirtualMemoryPressure-1.0",
              "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.Compute/virtualMachines', parameters('vmName')), 'Microsoft.Chaos/targets', 'Microsoft-Agent')]",
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
              ]
            },
            {
              "type": "Microsoft.Chaos/targets/capabilities",
              "apiVersion": "2021-09-15-preview",
              "scope": "[format('Microsoft.Compute/virtualMachines/{0}', parameters('vmName'))]",
              "name": "Microsoft-Agent/DiskIOPressure-1.0",
              "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.Compute/virtualMachines', parameters('vmName')), 'Microsoft.Chaos/targets', 'Microsoft-Agent')]",
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
              ]
            },
            {
              "type": "Microsoft.Chaos/targets/capabilities",
              "apiVersion": "2021-09-15-preview",
              "scope": "[format('Microsoft.Compute/virtualMachines/{0}', parameters('vmName'))]",
              "name": "Microsoft-Agent/LinuxDiskIOPressure-1.0",
              "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.Compute/virtualMachines', parameters('vmName')), 'Microsoft.Chaos/targets', 'Microsoft-Agent')]",
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
              ]
            },
            {
              "type": "Microsoft.Chaos/targets/capabilities",
              "apiVersion": "2021-09-15-preview",
              "scope": "[format('Microsoft.Compute/virtualMachines/{0}', parameters('vmName'))]",
              "name": "Microsoft-Agent/StopService-1.0",
              "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.Compute/virtualMachines', parameters('vmName')), 'Microsoft.Chaos/targets', 'Microsoft-Agent')]",
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
              ]
            },
            {
              "type": "Microsoft.Chaos/targets/capabilities",
              "apiVersion": "2021-09-15-preview",
              "scope": "[format('Microsoft.Compute/virtualMachines/{0}', parameters('vmName'))]",
              "name": "Microsoft-Agent/TimeChange-1.0",
              "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.Compute/virtualMachines', parameters('vmName')), 'Microsoft.Chaos/targets', 'Microsoft-Agent')]",
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
              ]
            },
            {
              "type": "Microsoft.Chaos/targets/capabilities",
              "apiVersion": "2021-09-15-preview",
              "scope": "[format('Microsoft.Compute/virtualMachines/{0}', parameters('vmName'))]",
              "name": "Microsoft-Agent/KillProcess-1.0",
              "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.Compute/virtualMachines', parameters('vmName')), 'Microsoft.Chaos/targets', 'Microsoft-Agent')]",
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
              ]
            },
            {
              "type": "Microsoft.Chaos/targets/capabilities",
              "apiVersion": "2021-09-15-preview",
              "scope": "[format('Microsoft.Compute/virtualMachines/{0}', parameters('vmName'))]",
              "name": "Microsoft-Agent/NetworkLatency-1.0",
              "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.Compute/virtualMachines', parameters('vmName')), 'Microsoft.Chaos/targets', 'Microsoft-Agent')]",
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
              ]
            },
            {
              "type": "Microsoft.Chaos/targets/capabilities",
              "apiVersion": "2021-09-15-preview",
              "scope": "[format('Microsoft.Compute/virtualMachines/{0}', parameters('vmName'))]",
              "name": "Microsoft-Agent/NetworkDisconnect-1.0",
              "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.Compute/virtualMachines', parameters('vmName')), 'Microsoft.Chaos/targets', 'Microsoft-Agent')]",
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
              ]
            },
            {
              "type": "Microsoft.Chaos/targets/capabilities",
              "apiVersion": "2021-09-15-preview",
              "scope": "[format('Microsoft.Compute/virtualMachines/{0}', parameters('vmName'))]",
              "name": "Microsoft-Agent/NetworkDisconnectViaFirewall-1.0",
              "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.Compute/virtualMachines', parameters('vmName')), 'Microsoft.Chaos/targets', 'Microsoft-Agent')]",
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
              ]
            },
            {
              "type": "Microsoft.Chaos/targets/capabilities",
              "apiVersion": "2021-09-15-preview",
              "scope": "[format('Microsoft.Compute/virtualMachines/{0}', parameters('vmName'))]",
              "name": "Microsoft-Agent/StressNg-1.0",
              "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.Compute/virtualMachines', parameters('vmName')), 'Microsoft.Chaos/targets', 'Microsoft-Agent')]",
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
              ]
            },
            {
              "type": "Microsoft.Chaos/targets/capabilities",
              "apiVersion": "2021-09-15-preview",
              "scope": "[format('Microsoft.Compute/virtualMachines/{0}', parameters('vmName'))]",
              "name": "Microsoft-Agent/DnsFailure-1.0",
              "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.Compute/virtualMachines', parameters('vmName')), 'Microsoft.Chaos/targets', 'Microsoft-Agent')]",
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
              ]
            },
            {
              "type": "Microsoft.Chaos/targets",
              "apiVersion": "2021-09-15-preview",
              "scope": "[format('Microsoft.Network/networkSecurityGroups/{0}', format('{0}-nsg', parameters('vmName')))]",
              "name": "microsoft-networksecuritygroup",
              "properties": {},
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-nsg', parameters('vmName')))]"
              ]
            },
            {
              "type": "Microsoft.Chaos/targets/capabilities",
              "apiVersion": "2021-09-15-preview",
              "scope": "[format('Microsoft.Network/networkSecurityGroups/{0}', format('{0}-nsg', parameters('vmName')))]",
              "name": "microsoft-networksecuritygroup/SecurityRule-1.0",
              "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-nsg', parameters('vmName'))), 'Microsoft.Chaos/targets', 'microsoft-networksecuritygroup')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-nsg', parameters('vmName')))]"
              ]
            }
          ],
          "outputs": {
            "vmId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', 'appinsights')]",
        "[resourceId('Microsoft.Storage/storageAccounts', format('storage{0}', uniqueString(resourceGroup().id)))]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'chaosidentity')]",
        "[resourceId('Microsoft.Network/virtualNetworks', 'chaos-vnet')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "aks",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[variables('location')]"
          },
          "subnetId": {
            "value": "[format('{0}/subnets/aks', resourceId('Microsoft.Network/virtualNetworks', 'chaos-vnet'))]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.8.9.13224",
              "templateHash": "7285391764642721879"
            }
          },
          "parameters": {
            "subnetId": {
              "type": "string"
            },
            "location": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
              "apiVersion": "2022-01-31-preview",
              "name": "aksIdentity",
              "location": "[parameters('location')]"
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-10-01-preview",
              "name": "[guid('aksIdentityRbac')]",
              "properties": {
                "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'aksIdentity')).principalId]",
                "roleDefinitionId": "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c",
                "principalType": "ServicePrincipal"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'aksIdentity')]"
              ]
            },
            {
              "type": "Microsoft.ContainerService/managedClusters",
              "apiVersion": "2022-04-01",
              "name": "mesh-demo-aks",
              "location": "[parameters('location')]",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'aksIdentity'))]": {}
                }
              },
              "properties": {
                "dnsPrefix": "mesh-demo-aks",
                "kubernetesVersion": "1.23.8",
                "networkProfile": {
                  "networkPlugin": "azure",
                  "serviceCidr": "192.168.0.0/22",
                  "dnsServiceIP": "192.168.0.10",
                  "dockerBridgeCidr": "172.16.0.0/22",
                  "outboundType": "loadBalancer"
                },
                "agentPoolProfiles": [
                  {
                    "name": "agentpool1",
                    "count": 3,
                    "vmSize": "Standard_B2ms",
                    "osType": "Linux",
                    "vnetSubnetID": "[parameters('subnetId')]",
                    "type": "VirtualMachineScaleSets",
                    "mode": "System",
                    "availabilityZones": [
                      "1",
                      "2",
                      "3"
                    ]
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'aksIdentity')]",
                "[resourceId('Microsoft.Authorization/roleAssignments', guid('aksIdentityRbac'))]"
              ]
            },
            {
              "type": "Microsoft.KubernetesConfiguration/extensions",
              "apiVersion": "2022-03-01",
              "scope": "[format('Microsoft.ContainerService/managedClusters/{0}', 'mesh-demo-aks')]",
              "name": "flux",
              "properties": {
                "extensionType": "Microsoft.Flux",
                "releaseTrain": "Stable",
                "scope": {
                  "cluster": {
                    "releaseNamespace": "flux-system"
                  }
                },
                "configurationSettings": {
                  "helm-controller.enabled": "true",
                  "source-controller.enabled": "true",
                  "kustomize-controller.enabled": "true",
                  "notification-controller.enabled": "true",
                  "image-automation-controller.enabled": "true",
                  "image-reflector-controller.enabled": "true"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.ContainerService/managedClusters', 'mesh-demo-aks')]"
              ]
            },
            {
              "type": "Microsoft.KubernetesConfiguration/fluxConfigurations",
              "apiVersion": "2022-03-01",
              "scope": "[format('Microsoft.ContainerService/managedClusters/{0}', 'mesh-demo-aks')]",
              "name": "flux",
              "properties": {
                "namespace": "flux-system",
                "scope": "cluster",
                "sourceKind": "GitRepository",
                "gitRepository": {
                  "repositoryRef": {
                    "branch": "main"
                  },
                  "syncIntervalInSeconds": 600,
                  "timeoutInSeconds": 600,
                  "url": "https://github.com/tkubica12/azure-workshops"
                },
                "kustomizations": {
                  "mydemo": {
                    "path": "/d-chaos-studio/kubernetes",
                    "timeoutInSeconds": 180,
                    "syncIntervalInSeconds": 180,
                    "retryIntervalInSeconds": 180,
                    "force": true,
                    "prune": true,
                    "dependsOn": []
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.ContainerService/managedClusters', 'mesh-demo-aks')]",
                "[extensionResourceId(resourceId('Microsoft.ContainerService/managedClusters', 'mesh-demo-aks'), 'Microsoft.KubernetesConfiguration/extensions', 'flux')]"
              ]
            },
            {
              "type": "Microsoft.Chaos/targets",
              "apiVersion": "2021-09-15-preview",
              "scope": "[format('Microsoft.ContainerService/managedClusters/{0}', 'mesh-demo-aks')]",
              "name": "microsoft-azurekubernetesservicechaosmesh",
              "properties": {},
              "dependsOn": [
                "[resourceId('Microsoft.ContainerService/managedClusters', 'mesh-demo-aks')]"
              ]
            },
            {
              "type": "Microsoft.Chaos/targets/capabilities",
              "apiVersion": "2021-09-15-preview",
              "scope": "[format('Microsoft.ContainerService/managedClusters/{0}', 'mesh-demo-aks')]",
              "name": "microsoft-azurekubernetesservicechaosmesh/NetworkChaos-2.1",
              "dependsOn": [
                "[resourceId('Microsoft.ContainerService/managedClusters', 'mesh-demo-aks')]",
                "[extensionResourceId(resourceId('Microsoft.ContainerService/managedClusters', 'mesh-demo-aks'), 'Microsoft.Chaos/targets', 'microsoft-azurekubernetesservicechaosmesh')]"
              ]
            },
            {
              "type": "Microsoft.Chaos/targets/capabilities",
              "apiVersion": "2021-09-15-preview",
              "scope": "[format('Microsoft.ContainerService/managedClusters/{0}', 'mesh-demo-aks')]",
              "name": "microsoft-azurekubernetesservicechaosmesh/IOChaos-2.1",
              "dependsOn": [
                "[resourceId('Microsoft.ContainerService/managedClusters', 'mesh-demo-aks')]",
                "[extensionResourceId(resourceId('Microsoft.ContainerService/managedClusters', 'mesh-demo-aks'), 'Microsoft.Chaos/targets', 'microsoft-azurekubernetesservicechaosmesh')]"
              ]
            },
            {
              "type": "Microsoft.Chaos/targets/capabilities",
              "apiVersion": "2021-09-15-preview",
              "scope": "[format('Microsoft.ContainerService/managedClusters/{0}', 'mesh-demo-aks')]",
              "name": "microsoft-azurekubernetesservicechaosmesh/KernelChaos-2.1",
              "dependsOn": [
                "[resourceId('Microsoft.ContainerService/managedClusters', 'mesh-demo-aks')]",
                "[extensionResourceId(resourceId('Microsoft.ContainerService/managedClusters', 'mesh-demo-aks'), 'Microsoft.Chaos/targets', 'microsoft-azurekubernetesservicechaosmesh')]"
              ]
            },
            {
              "type": "Microsoft.Chaos/targets/capabilities",
              "apiVersion": "2021-09-15-preview",
              "scope": "[format('Microsoft.ContainerService/managedClusters/{0}', 'mesh-demo-aks')]",
              "name": "microsoft-azurekubernetesservicechaosmesh/PodChaos-2.1",
              "dependsOn": [
                "[resourceId('Microsoft.ContainerService/managedClusters', 'mesh-demo-aks')]",
                "[extensionResourceId(resourceId('Microsoft.ContainerService/managedClusters', 'mesh-demo-aks'), 'Microsoft.Chaos/targets', 'microsoft-azurekubernetesservicechaosmesh')]"
              ]
            },
            {
              "type": "Microsoft.Chaos/targets/capabilities",
              "apiVersion": "2021-09-15-preview",
              "scope": "[format('Microsoft.ContainerService/managedClusters/{0}', 'mesh-demo-aks')]",
              "name": "microsoft-azurekubernetesservicechaosmesh/StressChaos-2.1",
              "dependsOn": [
                "[resourceId('Microsoft.ContainerService/managedClusters', 'mesh-demo-aks')]",
                "[extensionResourceId(resourceId('Microsoft.ContainerService/managedClusters', 'mesh-demo-aks'), 'Microsoft.Chaos/targets', 'microsoft-azurekubernetesservicechaosmesh')]"
              ]
            },
            {
              "type": "Microsoft.Chaos/targets/capabilities",
              "apiVersion": "2021-09-15-preview",
              "scope": "[format('Microsoft.ContainerService/managedClusters/{0}', 'mesh-demo-aks')]",
              "name": "microsoft-azurekubernetesservicechaosmesh/HTTPChaos-2.1",
              "dependsOn": [
                "[resourceId('Microsoft.ContainerService/managedClusters', 'mesh-demo-aks')]",
                "[extensionResourceId(resourceId('Microsoft.ContainerService/managedClusters', 'mesh-demo-aks'), 'Microsoft.Chaos/targets', 'microsoft-azurekubernetesservicechaosmesh')]"
              ]
            },
            {
              "type": "Microsoft.Chaos/targets/capabilities",
              "apiVersion": "2021-09-15-preview",
              "scope": "[format('Microsoft.ContainerService/managedClusters/{0}', 'mesh-demo-aks')]",
              "name": "microsoft-azurekubernetesservicechaosmesh/DNSChaos-2.1",
              "dependsOn": [
                "[resourceId('Microsoft.ContainerService/managedClusters', 'mesh-demo-aks')]",
                "[extensionResourceId(resourceId('Microsoft.ContainerService/managedClusters', 'mesh-demo-aks'), 'Microsoft.Chaos/targets', 'microsoft-azurekubernetesservicechaosmesh')]"
              ]
            },
            {
              "type": "Microsoft.Chaos/targets/capabilities",
              "apiVersion": "2021-09-15-preview",
              "scope": "[format('Microsoft.ContainerService/managedClusters/{0}', 'mesh-demo-aks')]",
              "name": "microsoft-azurekubernetesservicechaosmesh/TimeChaos-2.1",
              "dependsOn": [
                "[resourceId('Microsoft.ContainerService/managedClusters', 'mesh-demo-aks')]",
                "[extensionResourceId(resourceId('Microsoft.ContainerService/managedClusters', 'mesh-demo-aks'), 'Microsoft.Chaos/targets', 'microsoft-azurekubernetesservicechaosmesh')]"
              ]
            }
          ],
          "outputs": {
            "aksId": {
              "type": "string",
              "value": "[resourceId('Microsoft.ContainerService/managedClusters', 'mesh-demo-aks')]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', 'chaos-vnet')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "shutdownExperiment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "chaosIdentityClientId": {
            "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'chaosidentity')).clientId]"
          },
          "chaosIdentityId": {
            "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'chaosidentity')]"
          },
          "chaosIdentityTenantId": {
            "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'chaosidentity')).tenantId]"
          },
          "location": {
            "value": "[variables('location')]"
          },
          "linuxVm1Id": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'linuxVm1')).outputs.vmId.value]"
          },
          "linuxVm2Id": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'linuxVm2')).outputs.vmId.value]"
          },
          "windowsVm1Id": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'windowsVm1')).outputs.vmId.value]"
          },
          "windowsVm2Id": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'windowsVm2')).outputs.vmId.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.8.9.13224",
              "templateHash": "14601930737951303518"
            }
          },
          "parameters": {
            "linuxVm1Id": {
              "type": "string"
            },
            "linuxVm2Id": {
              "type": "string"
            },
            "windowsVm1Id": {
              "type": "string"
            },
            "windowsVm2Id": {
              "type": "string"
            },
            "chaosIdentityId": {
              "type": "string"
            },
            "chaosIdentityClientId": {
              "type": "string"
            },
            "chaosIdentityTenantId": {
              "type": "string"
            },
            "location": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Chaos/experiments",
              "apiVersion": "2021-09-15-preview",
              "name": "vmShutdownExperiment",
              "location": "[parameters('location')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "selectors": [
                  {
                    "type": "List",
                    "id": "linux-vms-zone1",
                    "targets": [
                      {
                        "type": "ChaosTarget",
                        "id": "[format('{0}/providers/Microsoft.Chaos/targets/microsoft-virtualmachine', parameters('linuxVm1Id'))]"
                      }
                    ]
                  },
                  {
                    "type": "List",
                    "id": "linux-vms-zone2",
                    "targets": [
                      {
                        "type": "ChaosTarget",
                        "id": "[format('{0}/providers/Microsoft.Chaos/targets/microsoft-virtualmachine', parameters('linuxVm2Id'))]"
                      }
                    ]
                  },
                  {
                    "type": "List",
                    "id": "windows-vms-zone1",
                    "targets": [
                      {
                        "type": "ChaosTarget",
                        "id": "[format('{0}/providers/Microsoft.Chaos/targets/microsoft-virtualmachine', parameters('windowsVm1Id'))]"
                      }
                    ]
                  },
                  {
                    "type": "List",
                    "id": "windows-vms-zone2",
                    "targets": [
                      {
                        "type": "ChaosTarget",
                        "id": "[format('{0}/providers/Microsoft.Chaos/targets/microsoft-virtualmachine', parameters('windowsVm2Id'))]"
                      }
                    ]
                  }
                ],
                "steps": [
                  {
                    "name": "Shutdown VMs in zone 1",
                    "branches": [
                      {
                        "name": "Force-shutdown Linux VM in zone 1 for 2 minutes",
                        "actions": [
                          {
                            "type": "continuous",
                            "selectorId": "linux-vms-zone1",
                            "name": "urn:csci:microsoft:virtualMachine:shutdown/1.0",
                            "duration": "PT2M",
                            "parameters": [
                              {
                                "key": "abruptShutdown",
                                "value": "true"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "name": "Force-shutdown Windows VM in zone 1 for 3 minutes",
                        "actions": [
                          {
                            "type": "continuous",
                            "selectorId": "windows-vms-zone1",
                            "name": "urn:csci:microsoft:virtualMachine:shutdown/1.0",
                            "duration": "PT3M",
                            "parameters": [
                              {
                                "key": "abruptShutdown",
                                "value": "true"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "name": "Wait for 3 minutes",
                    "branches": [
                      {
                        "name": "Wait for 3 minutes",
                        "actions": [
                          {
                            "type": "delay",
                            "name": "urn:csci:microsoft:chaosStudio:TimedDelay/1.0",
                            "duration": "PT3M"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "name": "Shutdown VMs in zone 2",
                    "branches": [
                      {
                        "name": "Force-shutdown Linux VM in zone 2 for 2 minutes",
                        "actions": [
                          {
                            "type": "continuous",
                            "selectorId": "linux-vms-zone2",
                            "name": "urn:csci:microsoft:virtualMachine:shutdown/1.0",
                            "duration": "PT2M",
                            "parameters": [
                              {
                                "key": "abruptShutdown",
                                "value": "true"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "name": "Force-shutdown Windows VM in zone 2 for 3 minutes",
                        "actions": [
                          {
                            "type": "continuous",
                            "selectorId": "windows-vms-zone2",
                            "name": "urn:csci:microsoft:virtualMachine:shutdown/1.0",
                            "duration": "PT3M",
                            "parameters": [
                              {
                                "key": "abruptShutdown",
                                "value": "true"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-10-01-preview",
              "name": "[guid('shutdownExperimentRbac')]",
              "properties": {
                "principalId": "[reference(resourceId('Microsoft.Chaos/experiments', 'vmShutdownExperiment'), '2021-09-15-preview', 'full').identity.principalId]",
                "roleDefinitionId": "/providers/Microsoft.Authorization/roleDefinitions/9980e02c-c2be-4d73-94e8-173b1dc7cf3c",
                "principalType": "ServicePrincipal"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Chaos/experiments', 'vmShutdownExperiment')]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'chaosidentity')]",
        "[resourceId('Microsoft.Resources/deployments', 'linuxVm1')]",
        "[resourceId('Microsoft.Resources/deployments', 'linuxVm2')]",
        "[resourceId('Microsoft.Resources/deployments', 'windowsVm1')]",
        "[resourceId('Microsoft.Resources/deployments', 'windowsVm2')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "vmFaultsExperiment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "chaosIdentityClientId": {
            "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'chaosidentity')).clientId]"
          },
          "chaosIdentityId": {
            "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'chaosidentity')]"
          },
          "chaosIdentityTenantId": {
            "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'chaosidentity')).tenantId]"
          },
          "location": {
            "value": "[variables('location')]"
          },
          "linuxVm1Id": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'linuxVm1')).outputs.vmId.value]"
          },
          "linuxVm2Id": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'linuxVm2')).outputs.vmId.value]"
          },
          "windowsVm1Id": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'windowsVm1')).outputs.vmId.value]"
          },
          "windowsVm2Id": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'windowsVm2')).outputs.vmId.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.8.9.13224",
              "templateHash": "6064792121901085501"
            }
          },
          "parameters": {
            "linuxVm1Id": {
              "type": "string"
            },
            "linuxVm2Id": {
              "type": "string"
            },
            "windowsVm1Id": {
              "type": "string"
            },
            "windowsVm2Id": {
              "type": "string"
            },
            "chaosIdentityId": {
              "type": "string"
            },
            "chaosIdentityClientId": {
              "type": "string"
            },
            "chaosIdentityTenantId": {
              "type": "string"
            },
            "location": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Chaos/experiments",
              "apiVersion": "2021-09-15-preview",
              "name": "vmFaultsExperiment",
              "location": "[parameters('location')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "selectors": [
                  {
                    "type": "List",
                    "id": "linux-vms-zone1",
                    "targets": [
                      {
                        "type": "ChaosTarget",
                        "id": "[format('{0}/providers/Microsoft.Chaos/targets/microsoft-agent', parameters('linuxVm1Id'))]"
                      }
                    ]
                  },
                  {
                    "type": "List",
                    "id": "linux-vms-zone2",
                    "targets": [
                      {
                        "type": "ChaosTarget",
                        "id": "[format('{0}/providers/Microsoft.Chaos/targets/microsoft-agent', parameters('linuxVm2Id'))]"
                      }
                    ]
                  },
                  {
                    "type": "List",
                    "id": "windows-vms-zone1",
                    "targets": [
                      {
                        "type": "ChaosTarget",
                        "id": "[format('{0}/providers/Microsoft.Chaos/targets/microsoft-agent', parameters('windowsVm1Id'))]"
                      }
                    ]
                  },
                  {
                    "type": "List",
                    "id": "windows-vms-zone2",
                    "targets": [
                      {
                        "type": "ChaosTarget",
                        "id": "[format('{0}/providers/Microsoft.Chaos/targets/microsoft-agent', parameters('windowsVm2Id'))]"
                      }
                    ]
                  }
                ],
                "steps": [
                  {
                    "name": "Inject faults into VMs",
                    "branches": [
                      {
                        "name": "Network latency in Windows VM 1",
                        "actions": [
                          {
                            "type": "continuous",
                            "selectorId": "windows-vms-zone1",
                            "name": "urn:csci:microsoft:agent:networkLatency/1.0",
                            "duration": "PT5M",
                            "parameters": [
                              {
                                "key": "latencyInMilliseconds",
                                "value": "500"
                              },
                              {
                                "key": "destinationFilters",
                                "value": "[[ { \"address\": \"10.100.0.0\", \"subnetMask\": \"255.255.0.0\", \"portLow\":80, \"portHigh\":80 } ]"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "name": "CPU stress in Windows VM 2",
                        "actions": [
                          {
                            "type": "continuous",
                            "selectorId": "windows-vms-zone2",
                            "name": "urn:csci:microsoft:agent:cpuPressure/1.0",
                            "duration": "PT5M",
                            "parameters": [
                              {
                                "key": "pressureLevel",
                                "value": "90"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "name": "Disk IO stress in Linux VM 1",
                        "actions": [
                          {
                            "type": "continuous",
                            "selectorId": "linux-vms-zone1",
                            "name": "urn:csci:microsoft:agent:linuxDiskIOPressure/1.0",
                            "duration": "PT5M",
                            "parameters": [
                              {
                                "key": "workerCount",
                                "value": "10"
                              },
                              {
                                "key": "fileSizePerWorker",
                                "value": "256m"
                              },
                              {
                                "key": "blockSize",
                                "value": "4k"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-10-01-preview",
              "name": "[guid('vmFaultsExperimentRbac')]",
              "properties": {
                "principalId": "[reference(resourceId('Microsoft.Chaos/experiments', 'vmFaultsExperiment'), '2021-09-15-preview', 'full').identity.principalId]",
                "roleDefinitionId": "/providers/Microsoft.Authorization/roleDefinitions/acdd72a7-3385-48ef-bd42-f606fba81ae7",
                "principalType": "ServicePrincipal"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Chaos/experiments', 'vmFaultsExperiment')]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'chaosidentity')]",
        "[resourceId('Microsoft.Resources/deployments', 'linuxVm1')]",
        "[resourceId('Microsoft.Resources/deployments', 'linuxVm2')]",
        "[resourceId('Microsoft.Resources/deployments', 'windowsVm1')]",
        "[resourceId('Microsoft.Resources/deployments', 'windowsVm2')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "aksExperiments",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "aksId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'aks')).outputs.aksId.value]"
          },
          "location": {
            "value": "[variables('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.8.9.13224",
              "templateHash": "16086266160037410037"
            }
          },
          "parameters": {
            "aksId": {
              "type": "string"
            },
            "location": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Chaos/experiments",
              "apiVersion": "2021-09-15-preview",
              "name": "podExperiments",
              "location": "[parameters('location')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "selectors": [
                  {
                    "type": "List",
                    "id": "aks",
                    "targets": [
                      {
                        "type": "ChaosTarget",
                        "id": "[format('{0}/providers/Microsoft.Chaos/targets/microsoft-azurekubernetesservicechaosmesh', parameters('aksId'))]"
                      }
                    ]
                  }
                ],
                "steps": [
                  {
                    "name": "Kill random pod in default namespace",
                    "branches": [
                      {
                        "name": "Pod killer",
                        "actions": [
                          {
                            "type": "continuous",
                            "selectorId": "aks",
                            "name": "urn:csci:microsoft:azureKubernetesServiceChaosMesh:podChaos/2.1",
                            "duration": "PT10S",
                            "parameters": [
                              {
                                "key": "jsonSpec",
                                "value": "{\"action\":\"pod-kill\",\"mode\":\"one\",\"duration\":\"10s\",\"selector\":{\"namespaces\":[\"default\"]}}"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "name": "Kill another random pod in default namespace",
                    "branches": [
                      {
                        "name": "Pod killer",
                        "actions": [
                          {
                            "type": "continuous",
                            "selectorId": "aks",
                            "name": "urn:csci:microsoft:azureKubernetesServiceChaosMesh:podChaos/2.1",
                            "duration": "PT10S",
                            "parameters": [
                              {
                                "key": "jsonSpec",
                                "value": "{\"action\":\"pod-kill\",\"mode\":\"one\",\"duration\":\"10s\",\"selector\":{\"namespaces\":[\"default\"]}}"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "name": "Kill another random pod in default namespace",
                    "branches": [
                      {
                        "name": "Pod killer",
                        "actions": [
                          {
                            "type": "continuous",
                            "selectorId": "aks",
                            "name": "urn:csci:microsoft:azureKubernetesServiceChaosMesh:podChaos/2.1",
                            "duration": "PT10S",
                            "parameters": [
                              {
                                "key": "jsonSpec",
                                "value": "{\"action\":\"pod-kill\",\"mode\":\"one\",\"duration\":\"10s\",\"selector\":{\"namespaces\":[\"default\"]}}"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "name": "Fail one pod in myapp1",
                    "branches": [
                      {
                        "name": "Pod failure in myapp1",
                        "actions": [
                          {
                            "type": "continuous",
                            "selectorId": "aks",
                            "name": "urn:csci:microsoft:azureKubernetesServiceChaosMesh:podChaos/2.1",
                            "duration": "PT2M",
                            "parameters": [
                              {
                                "key": "jsonSpec",
                                "value": "{\"action\":\"pod-failure\",\"mode\":\"one\",\"selector\":{\"namespaces\":[\"default\"],\"labelSelectors\":{\"app\":\"myapp1\"}}}"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "name": "Pod failure in myapp2",
                        "actions": [
                          {
                            "type": "continuous",
                            "selectorId": "aks",
                            "name": "urn:csci:microsoft:azureKubernetesServiceChaosMesh:podChaos/2.1",
                            "duration": "PT2M",
                            "parameters": [
                              {
                                "key": "jsonSpec",
                                "value": "{\"action\":\"pod-failure\",\"mode\":\"one\",\"selector\":{\"namespaces\":[\"default\"],\"labelSelectors\":{\"app\":\"myapp2\"}}}"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-10-01-preview",
              "name": "[guid('podKillerRbac')]",
              "properties": {
                "principalId": "[reference(resourceId('Microsoft.Chaos/experiments', 'podExperiments'), '2021-09-15-preview', 'full').identity.principalId]",
                "roleDefinitionId": "/providers/Microsoft.Authorization/roleDefinitions/0ab0b1a8-8aac-4efd-b8c2-3ee1fb270be8",
                "principalType": "ServicePrincipal"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Chaos/experiments', 'podExperiments')]"
              ]
            },
            {
              "type": "Microsoft.Chaos/experiments",
              "apiVersion": "2021-09-15-preview",
              "name": "stressExperiments",
              "location": "[parameters('location')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "selectors": [
                  {
                    "type": "List",
                    "id": "aks",
                    "targets": [
                      {
                        "type": "ChaosTarget",
                        "id": "[format('{0}/providers/Microsoft.Chaos/targets/microsoft-azurekubernetesservicechaosmesh', parameters('aksId'))]"
                      }
                    ]
                  }
                ],
                "steps": [
                  {
                    "name": "Generate stress",
                    "branches": [
                      {
                        "name": "High CPU usage on one of myapp1 pods",
                        "actions": [
                          {
                            "type": "continuous",
                            "selectorId": "aks",
                            "name": "urn:csci:microsoft:azureKubernetesServiceChaosMesh:stressChaos/2.1",
                            "duration": "PT1M",
                            "parameters": [
                              {
                                "key": "jsonSpec",
                                "value": "{\"mode\":\"one\",\"selector\":{\"namespaces\":[\"default\"],\"labelSelectors\":{\"app\":\"myapp1\"}},\"stressors\":{\"cpu\":{\"workers\":2,\"load\":80}}}"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "name": "High memory usage on one of myapp2 pods",
                        "actions": [
                          {
                            "type": "continuous",
                            "selectorId": "aks",
                            "name": "urn:csci:microsoft:azureKubernetesServiceChaosMesh:stressChaos/2.1",
                            "duration": "PT1M",
                            "parameters": [
                              {
                                "key": "jsonSpec",
                                "value": "{\"mode\":\"one\",\"selector\":{\"namespaces\":[\"default\"],\"labelSelectors\":{\"app\":\"myapp2\"}},\"stressors\":{\"memory\":{\"workers\":20,\"size\":\"512MB\"}}}"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-10-01-preview",
              "name": "[guid('stressExperimentsRbac')]",
              "properties": {
                "principalId": "[reference(resourceId('Microsoft.Chaos/experiments', 'stressExperiments'), '2021-09-15-preview', 'full').identity.principalId]",
                "roleDefinitionId": "/providers/Microsoft.Authorization/roleDefinitions/0ab0b1a8-8aac-4efd-b8c2-3ee1fb270be8",
                "principalType": "ServicePrincipal"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Chaos/experiments', 'stressExperiments')]"
              ]
            },
            {
              "type": "Microsoft.Chaos/experiments",
              "apiVersion": "2021-09-15-preview",
              "name": "networkExperiments",
              "location": "[parameters('location')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "selectors": [
                  {
                    "type": "List",
                    "id": "aks",
                    "targets": [
                      {
                        "type": "ChaosTarget",
                        "id": "[format('{0}/providers/Microsoft.Chaos/targets/microsoft-azurekubernetesservicechaosmesh', parameters('aksId'))]"
                      }
                    ]
                  }
                ],
                "steps": [
                  {
                    "name": "Network and connectivity faults",
                    "branches": [
                      {
                        "name": "Added network latency myapp1",
                        "actions": [
                          {
                            "type": "continuous",
                            "selectorId": "aks",
                            "name": "urn:csci:microsoft:azureKubernetesServiceChaosMesh:networkChaos/2.1",
                            "duration": "PT2M",
                            "parameters": [
                              {
                                "key": "jsonSpec",
                                "value": "{\"mode\":\"all\",\"selector\":{\"namespaces\":[\"default\"],\"labelSelectors\":{\"app\":\"myapp1\"}},\"action\":\"delay\",\"delay\":{\"latency\":\"100ms\",\"correlation\":\"100\",\"jitter\":\"50ms\"}}"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "name": "Inject fake responses from myapp1 in myapp2",
                        "actions": [
                          {
                            "type": "continuous",
                            "selectorId": "aks",
                            "name": "urn:csci:microsoft:azureKubernetesServiceChaosMesh:httpChaos/2.1",
                            "duration": "PT2M",
                            "parameters": [
                              {
                                "key": "jsonSpec",
                                "value": "{\"mode\":\"all\",\"selector\":{\"namespaces\":[\"default\"],\"labelSelectors\":{\"app\":\"myapp2\"}},\"target\":\"Response\",\"port\":80,\"replace\":{\"body\":\"eyJpcCI6ICJqZWpkYVRvaGxlSmVTdHJpbmcifQ==\"}}"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "name": "Provide fake responses on DNS request to tomaskubica.cz",
                        "actions": [
                          {
                            "type": "continuous",
                            "selectorId": "aks",
                            "name": "urn:csci:microsoft:azureKubernetesServiceChaosMesh:dnsChaos/2.1",
                            "duration": "PT2M",
                            "parameters": [
                              {
                                "key": "jsonSpec",
                                "value": "{\"mode\":\"all\",\"selector\":{\"namespaces\":[\"default\"],\"labelSelectors\":{\"app\":\"myapp1\"}},\"action\":\"random\",\"patterns\":[\"tomaskubica.cz\"]}"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-10-01-preview",
              "name": "[guid('networkExperiments')]",
              "properties": {
                "principalId": "[reference(resourceId('Microsoft.Chaos/experiments', 'networkExperiments'), '2021-09-15-preview', 'full').identity.principalId]",
                "roleDefinitionId": "/providers/Microsoft.Authorization/roleDefinitions/0ab0b1a8-8aac-4efd-b8c2-3ee1fb270be8",
                "principalType": "ServicePrincipal"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Chaos/experiments', 'networkExperiments')]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'aks')]"
      ]
    }
  ]
}